# https://github.com/FlareSolverr/FlareSolverr
replicaCount: 1

image:
  repository: ghcr.io/notifiarr/notifiarr
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: ''

imagePullSecrets: []
nameOverride: ''
fullnameOverride: ''

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ''

podAnnotations: {}

podSecurityContext:
  fsGroup: 1001

securityContext:
  # capabilities:
  #   drop:
  #   - ALL
  # runAsNonRoot: true
  # runAsUser: 1001
  # runAsGroup: 1001

# Ports to be exposed, grouped by services
# https://support.plex.tv/articles/201543147-what-network-ports-do-i-need-to-allow-through-my-firewall/
services:
  - name: http
    type: ClusterIP
    port: &httpPort 5454
    protocol: TCP
    ingress:
      className: nginx-internal
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt
      hosts:
        - host: &dnsName notifiarr.drewburr.com
          paths:
            - path: /
              pathType: ImplementationSpecific
      tls:
        - secretName: notifiarr-ingress
          hosts:
            - *dnsName

resources:
  {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# Key: value environment variables to be appended to env
envVars:
  PUID: 1001
  PGID: 1001
  TZ: America/New_York

# Directly appended to env. Supports valueFrom
env: []

# Container envFrom
envFrom: #[]
  - secretRef:
      name: notifiarr-conf

initContainers: []

# All are mounted under fsroot `/`. Supports additions
# Expected to be created already for Plex
persistence:
  - name: notifiarr-config
    mountPath: config
    accessModes:
      - ReadWriteOnce
    requests: 10Gi
    storageClassName: zfs-nvmeof
  - name: backups

additionalVolumeMounts: []

nodeSelector: {}

tolerations: []

affinity: {}

startupProbe:
  tcpSocket:
    port: *httpPort
livenessProbe:
  tcpSocket:
    port: *httpPort
readinessProbe:
  tcpSocket:
    port: *httpPort
