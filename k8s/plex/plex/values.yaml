# Default values for example.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: plexinc/pms-docker
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: ''

imagePullSecrets: []
nameOverride: ''
fullnameOverride: ''

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ''

podAnnotations: {}

podSecurityContext:
  fsGroup: 1001
  fsGroupChangePolicy: "OnRootMismatch"

securityContext:
  # capabilities:
  #   drop:
  #   - ALL
  # runAsNonRoot: true
  # runAsUser: 1001
  # runAsGroup: 1001

# Ports to be exposed, grouped by services
# https://support.plex.tv/articles/201543147-what-network-ports-do-i-need-to-allow-through-my-firewall/
services:
  - name: https
    type: ClusterIP
    port: 32400
    protocol: TCP
    ingress:
      className: nginx-external
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt
        nginx.ingress.kubernetes.io/backend-protocol: 'HTTPS'
        external-dns.alpha.kubernetes.io/target: ip.drewburr.com
      hosts:
        - host: plex.drewburr.com
          paths:
            - path: /
              pathType: ImplementationSpecific
      tls:
        - secretName: plex-ingress
          hosts:
            - plex.drewburr.com

  # # The following additional ports are also used within the local network for different services
  # local:
  #   type: ClusterIP
  #   ports:
  #     - name: dlnaUdp
  #       port: 1900
  #       protocol: UDP
  #     - name: bonjour
  #       port: 5353
  #       protocol: UDP
  #     - name: companion
  #       port: 8324
  #       protocol: TCP
  #     - name: gdm
  #       port: 32410
  #       protocol: UDP
  #     - port: 32412
  #       protocol: UDP
  #     - port: 32413
  #       protocol: UDP
  #     - port: 32414
  #       protocol: UDP
  #     - name: dlnaTcp
  #       port: 32469
  #       protocol: TCP

resources:
  limits:
    gpu.intel.com/xe: 1
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# Appended to env. Supports envFrom
env: []

# Key: value environment variables to be appended to env
envVars:
  PLEX_UID: 1001
  PLEX_GID: 1001
  TZ: America/New_York
  HOSTNAME: plex.drewburr.com
  CHANGE_CONFIG_DIR_OWNERSHIP: false
  ADVERTISE_IP: https://plex.drewburr.com
  ALLOWED_NETWORKS: '127.0.0.1/32'

# dnsPolicy: None
# dnsConfig:
#   nameservers:
#     - 192.168.4.1
#     - 1.1.1.1

# All are mounted under fsroot `/`. Supports additions
persistence:
  - name: plex-config
    mountPath: config
    accessModes:
      - ReadWriteOnce
    requests: 80Gi
    storageClassName: zfs-nvmeof
  - name: plex-data
    mountPath: data
    accessModes:
      - ReadWriteMany
    requests: 18Ti
    storageClassName: nfs-lake
  - name: backups
    accessModes:
      - ReadWriteMany
    requests: 50Gi
    storageClassName: zfs-nfs
  - name: transcode-large
    accessModes:
      - ReadWriteOnce
    requests: 150Gi
    storageClassName: zfs-nvmeof

additionalVolumes:
  - name: transcode
    emptyDir:
      medium: Memory
      sizeLimit: 12Gi

additionalVolumeMounts:
  - name: transcode
    mountPath: /transcode

nodeSelector: {}

tolerations:
  - key: compute
    operator: Exists
    effect: PreferNoSchedule

affinity:
  nodeAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        preference:
          matchExpressions:
            - key: compute
              operator: In
              values:
                - 'true'

initContainers:
  - name: mkdir
    image:
      repository: plexinc/pms-docker
      pullPolicy: Always
      # Overrides the image tag whose default is the chart appVersion.
      tag: ''
    command:
      - /bin/bash
      - -c
      - >-
        mkdir -p /data/downloads/torrents/{movies,tv,anime} &&
        mkdir -p /data/downloads/usenet/incomplete &&
        mkdir -p /data/downloads/usenet/complete/{movies,tv,anime} &&
        mkdir -p /data/media/{movies,tv,anime} &&
        mkdir -p /backups/{overseerr,plex,radarr,sabnzbd,sonarr,sonarr-anime}
    securityContext:
      runAsNonRoot: true
      runAsUser: 1001
      runAsGroup: 1001

startupProbe:
  tcpSocket:
    port: 32400
  failureThreshold: 30
  periodSeconds: 10
livenessProbe:
  tcpSocket:
    port: 32400
readinessProbe:
  tcpSocket:
    port: 32400
