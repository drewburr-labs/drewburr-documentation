# Default values for panel.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: pufferpanel/pufferpanel
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ''

imagePullSecrets: []
nameOverride: ''
fullnameOverride: ''

livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http
startupProbe: {}

persistence: []

additionalVolumes:
  - name: docker-certs
    mountPath: /docker-certs
    emptyDir:
      sizeLimit: 50Mi

additionalVolumeMounts: []

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ''

podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

initContainers:
  - name: docker
    image:
      repository: docker
      pullPolicy: IfNotPresent
      # Overrides the image tag whose default is the chart appVersion.
      tag: '27.4.0-dind'
    env:
      - name: DOCKER_TLS_CERTDIR
        value: docker-certs
    envFrom: []
    ports:
      - name: docker
        port: 2376
        protocol: TCP
    resources: {}
    restartPolicy: Always
    readinessProbe:
      tcpSocket:
        port: docker
    livenessProbe:
      tcpSocket:
        port: docker
    # startupProbe:
    #   httpGet:
    #     path: /_ping
    #     port: docker
    securityContext:
      privileged: true
      # capabilities:
      #   drop:
      #   - ALL
      # readOnlyRootFilesystem: true
      # runAsNonRoot: true
      # runAsUser: 1000
    volumeMounts:
      - name: docker-certs
        mountPath: /docker-certs

services:
  - name: http
    type: ClusterIP
    ports:
      - name: http
        port: 8080
        protocol: TCP
    ingress:
      className: nginx-internal
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt
      hosts:
        - host: pufferpanel.drewburr.com
          paths:
            - path: /
              pathType: ImplementationSpecific
      tls:
        - secretName: pufferpanel-ingress
          hosts:
            - pufferpanel.drewburr.com
  - name: sftp
    type: ClusterIP
    ports:
      - name: sftp
        port: 5657
        protocol: TCP
    ingress:
      className: nginx-internal
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt
        traefik.ingress.kubernetes.io/router.entrypoints: sftp
      hosts:
        - host: pufferpanel.drewburr.com
          paths:
            - path: /
              pathType: ImplementationSpecific
      tls:
        - secretName: pufferpanel-ingress
          hosts:
            - pufferpanel.drewburr.com

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
